{"version":3,"sources":["components/Switch.tsx","components/Navbar.tsx","config.ts","utils/axios.ts","hooks/useSocket.tsx","components/Badge.tsx","components/Song.tsx","components/Spinner.tsx","components/VideoWrapper.tsx","components/Playlist.tsx","api/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Switch","className","children","id","rest","type","htmlFor","Navbar","href","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","disabled","config","baseUrl","process","webSocketUrl","AxiosError","status","message","details","axiosError","statusCode","Object","setPrototypeOf","prototype","this","Error","axiosInstance","axios","create","baseURL","interceptors","response","use","error","data","request","asyncFunction","a","defaultContext","socketConnected","socketId","SocketContext","createContext","SocketProvider","value","url","socketRef","useRef","emitterRef","EventEmitter","useState","setSocketId","setSocketConnected","useEffect","socket","WebSocket","current","onopen","onclose","onmessage","e","JSON","parse","event_type","emit","console","log","close","removeAllListeners","useProvideSocket","Provider","Badge","title","SongItem","song","onClick","isCurrent","playing","progress","isNextSong","duration","style","cursor","width","src","thumbnail_url","alt","description","height","role","aria-valuenow","aria-valuemin","aria-valuemax","Spinner","VideoWrapper","Playlist","useContext","playlist","setPlayList","setPlaying","loading","setLoading","_id","$oid","user","index","currentSong","setCurrentSong","appendToPlaylist","useCallback","newItem","emitter","onNewSong","json","on","removeListener","method","fetchPlaylist","length","playedSeconds","Math","round","controls","onStart","onPlay","onPause","pip","onProgress","onDuration","onEnded","nextIndex","wrapper","map","nextSong","nextSongIndex","preventDefault","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7acf97d1.chunk.js","sourcesContent":["export const Switch = ({ className = '', children, id, ...rest }: Omit<React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>, 'type'>) => {\n    return (\n        <div className=\"form-check form-switch\">\n            <input type=\"checkbox\" className={`form-check-input ${className}`} {...rest} id={id} />\n            <label className=\"form-check-label text-light\" htmlFor={id}>{children}</label>\n        </div>\n    )\n}","import { Switch } from \"./Switch\"\n\nexport const Navbar = () => {\n    return (\n        <nav className=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark\">\n            <div className=\"container-fluid\">\n                <a className=\"navbar-brand\" href=\"/\">Innovate Playlist</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n                    <form className=\"d-flex ms-auto\">\n                            <Switch disabled>\n                                Sangai Sunam (Coming Soon)\n                            </Switch>\n                    </form>\n                </div>\n            </div>\n        </nav>\n    )\n}","const config = {\n  baseUrl: process.env.REACT_APP_BACKEND_URL,\n  webSocketUrl: process.env.REACT_APP_WS_URL,\n};\n\nexport default config;\n","import config from \"../config\";\nimport axios, { AxiosRequestConfig } from \"axios\";\n\nexport class AxiosError extends Error {\n  private statusCode: number | string;\n\n  private details: {\n    [id: string]: any;\n  };\n\n  private axiosError: any;\n\n  constructor(\n    status: number | string,\n    message: string,\n    details: any,\n    axiosError: any\n  ) {\n    super(message);\n    this.statusCode = status;\n    this.details = details;\n    this.axiosError = axiosError;\n    // only because we are extending a built in class\n    Object.setPrototypeOf(this, AxiosError.prototype);\n  }\n\n  serializeErrors() {\n    return [\n      {\n        message: this.message,\n        status: this.statusCode,\n        details: this.details,\n      },\n    ];\n  }\n}\n\nexport const axiosInstance = axios.create({\n  baseURL: config.baseUrl,\n});\n\naxiosInstance.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      const axiosError = new AxiosError(\n        error.response.status,\n        error.response.data.message,\n        error.response.data,\n        error.response\n      );\n      throw axiosError;\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      const axiosError = new AxiosError(500, \"No Response\", {}, error.request);\n      throw axiosError;\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      const axiosError = new AxiosError(\n        500,\n        error.message,\n        { message: \"Setting error\" },\n        {}\n      );\n      throw axiosError;\n    }\n  }\n);\n\nexport const asyncFunction = async (config: AxiosRequestConfig) => {\n  const response = await axiosInstance.request(config);\n  return response.data;\n};\n","import React, {\n  useState,\n  useEffect,\n  useContext,\n  createContext,\n  useRef,\n} from \"react\";\nimport EventEmitter from \"events\";\n\ninterface SocketContextInterface {\n  socketRef?: React.MutableRefObject<WebSocket | undefined>;\n  emitterRef?: React.MutableRefObject<EventEmitter>;\n  socketId: string;\n  socketConnected: boolean;\n}\nconst defaultContext: SocketContextInterface = {\n  socketConnected: false,\n  socketId: \"\",\n};\n\nconst SocketContext = createContext<SocketContextInterface>(defaultContext);\n\nconst useProvideSocket = (url: string): SocketContextInterface => {\n  const socketRef = useRef<WebSocket>();\n  const emitterRef = useRef<EventEmitter>(new EventEmitter());\n  const [socketId, setSocketId] = useState<string>(\"\");\n  const [socketConnected, setSocketConnected] = useState<boolean>(false);\n  useEffect(() => {\n    const socket = new WebSocket(url);\n    socketRef.current = socket;\n    if (socket) {\n      socket.onopen = function () {\n        setSocketConnected(true);\n      };\n      socket.onclose = function () {\n        setSocketId(\"\");\n        setSocketConnected(false);\n      };\n      socket.onmessage = function (e) {\n        const { message, event_type } = JSON.parse(e.data);\n        if (event_type === \"welcome\") {\n          setSocketId(message);\n        }\n        emitterRef.current?.emit(event_type, message);\n        console.log(\"Received: \" + e.data);\n      };\n    }\n  }, [url]);\n  useEffect(\n    () => () => {\n      if (socketRef.current) {\n        socketRef.current.close();\n      }\n      if (emitterRef.current) {\n        emitterRef.current.removeAllListeners();\n      }\n    },\n    []\n  );\n  return {\n    socketRef,\n    emitterRef,\n    socketConnected,\n    socketId,\n  };\n};\n\ninterface SocketProviderProps {\n  children: React.ReactNode;\n  url?: string;\n}\nexport const SocketProvider = ({ children, url }: SocketProviderProps) => {\n  const value = useProvideSocket(url || \"\");\n  return (\n    <SocketContext.Provider value={value}>{children}</SocketContext.Provider>\n  );\n};\n\nexport const useSocket = () => {\n  return useContext(SocketContext);\n};\n","export interface BadgeProps {\n  title: string;\n  className?: string;\n}\nexport const Badge = ({ title, className = \"\" }: BadgeProps) => {\n  return <span className={`badge mt-1 me-2 ${className}`}>{title}</span>;\n};\n","import { Badge } from \"./Badge\";\n\nexport interface Song {\n  user: string;\n  _id: {\n    $oid: string;\n  };\n  thumbnail_url: string;\n  url: string;\n  title: string;\n  description: string;\n  status: \"pending\" | \"playing\" | \"played\";\n}\n\ninterface SongProps {\n  song: Song;\n  onClick: React.MouseEventHandler<HTMLLIElement>;\n  isCurrent: boolean;\n  playing: boolean;\n  progress: number;\n  isNextSong: boolean;\n  duration: number;\n  className?: string;\n}\nexport const SongItem = ({\n  song,\n  onClick,\n  isCurrent,\n  playing,\n  progress,\n  isNextSong,\n  duration,\n  className,\n}: SongProps) => (\n  <li\n    onClick={onClick}\n    className={`list-group-item p-0 text-white px-5 py-2 mb-2 ${\n      className || \"\"\n    }`}\n    style={{\n      cursor: \"pointer\",\n    }}\n  >\n    <div className=\" d-flex\">\n      <div className=\"flex-shrink-0 d-flex\" style={{ width: \"20%\" }}>\n        <div className=\"align-self-center\">\n          <img\n            src={song.thumbnail_url}\n            className=\"img-fluid\"\n            alt={song.title}\n          />\n        </div>\n      </div>\n      <div className=\"flex-grow-1 py-2 px-3\">\n        <p className=\"mb-1\">{song.title || song.url}</p>\n        <p className=\"text-muted\">{song.description}</p>\n        <div className=\"d-flex\">\n          {isCurrent && playing && (\n            <>\n              <Badge className=\"align-self-center bg-success\" title=\"Playing\" />\n              <Badge\n                className=\"align-self-center bg-light text-dark\"\n                title={`${progress} %`}\n              />\n            </>\n          )}\n          {isCurrent && !playing && (\n            <Badge className=\"align-self-center bg-danger\" title=\"Paused\" />\n          )}\n          {isNextSong && (\n            <>\n              <Badge\n                className=\"align-self-center bg-warning text-dark\"\n                title=\"Up Next\"\n              />\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n    {isCurrent && (\n      <div className=\"progress bg-dark mt-2\" style={{ height: \"4px\" }}>\n        <div\n          className=\"progress-bar bg-danger\"\n          role=\"progressbar\"\n          style={{ width: `${progress}%` }}\n          aria-valuenow={progress}\n          aria-valuemin={0}\n          aria-valuemax={duration}\n        />\n      </div>\n    )}\n  </li>\n);\n","export const Spinner = () => {\n    return (\n        <div className=\"spinner-border text-light\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}","import React from \"react\";\n\nexport const VideoWrapper = ({children}:{children?:React.ReactNode}) => (\n    <div className=\"video-player\">\n    {children}\n</div>)","import { useState } from \"react\";\nimport { useCallback } from \"react\";\nimport { useEffect } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { getPlaylist } from \"../api\";\nimport { useSocket } from \"../hooks/useSocket\";\nimport { Song, SongItem } from \"./Song\";\nimport { Spinner } from \"./Spinner\";\nimport { VideoWrapper } from \"./VideoWrapper\";\n\nexport const Playlist = () => {\n  const { socketConnected, socketId, socketRef, emitterRef } = useSocket();\n  const [playlist, setPlayList] = useState<Song[]>([]);\n  const [playing, setPlaying] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [currentSong, setCurrentSong] = useState<\n    Song & { index: number; duration?: number; playedSeconds?: number }\n  >({\n    _id: {\n      $oid: \"\",\n    },\n    user: \"\",\n    url: \"\",\n    thumbnail_url: \"\",\n    status: \"pending\",\n    title: \"\",\n    description: \"\",\n    index: 0,\n  });\n  const appendToPlaylist = useCallback(\n    (newItem: Song) => {\n      setPlayList([...playlist, newItem]);\n    },\n    [playlist]\n  );\n  useEffect(() => {\n    const socket = socketRef?.current;\n    const emitter = emitterRef?.current;\n    const onNewSong = (data: string) => {\n      const json: Song = JSON.parse(data);\n      appendToPlaylist(json);\n    };\n    if (socketConnected && socket && socketId && emitter) {\n      console.log(\"all done\");\n      emitter.on(\"newSong\", onNewSong);\n    }\n    return () => {\n      console.log(\"Clear\");\n      emitter?.removeListener(\"newSong\", onNewSong);\n    };\n  }, [socketId, socketConnected, socketRef, emitterRef, appendToPlaylist]);\n  useEffect(() => {\n    const fetchPlaylist = async () => {\n      try {\n        setLoading(true)\n        const playlist = await getPlaylist();\n        setPlayList(playlist);\n      } catch (err) {\n        console.log(err);\n      } finally{\n        setLoading(false)\n      }\n    };\n    fetchPlaylist();\n  }, []);\n\n  useEffect(() => {\n    if (playlist.length && !playing && !currentSong.url) {\n      setCurrentSong({ ...currentSong, ...playlist[0], index: 0 });\n    }\n  }, [playlist, playing, currentSong]);\n  const { playedSeconds, duration } = currentSong;\n  const progress =\n    playedSeconds && duration\n      ? Math.round((playedSeconds / duration) * 100)\n      : 0;\n  if(loading) {\n    return (\n      <div className=\"max-height bg-dark d-flex align-items-center justify-content-center w-full\">\n        <Spinner/>\n      </div>\n    )\n  }\n  return (\n    <div className=\"overflow-hidden d-flex bg-dark\">\n      <div className=\"flex-grow-1 col max-height\">\n        <ReactPlayer\n          url={currentSong.url}\n          playing={playing}\n          controls\n          onStart={() => {\n            setPlaying(true);\n          }}\n          onPlay={() => {\n            setPlaying(true);\n          }}\n          onPause={() => {\n            setPlaying(false);\n          }}\n          pip\n          onProgress={({ playedSeconds }) => {\n            setCurrentSong({ ...currentSong, playedSeconds });\n          }}\n          onDuration={(duration) => {\n            setCurrentSong({ ...currentSong, duration });\n          }}\n          onEnded={() => {\n            if (playlist.length) {\n              const nextIndex = currentSong.index + 1;\n              if (nextIndex === playlist.length) {\n                setCurrentSong({ ...playlist[0], index: 0 });\n              } else {\n                setCurrentSong({ ...playlist[nextIndex], index: nextIndex });\n              }\n            }\n          }}\n          width={\"100%\"}\n          wrapper={VideoWrapper}\n        />\n      </div>\n      <div\n        className=\"flex-shrink-0 col-sm-4 overflow-auto max-height\"\n      >\n        <ul className=\"list-group list-group-flush\">\n          {playlist.map((song, index) => {\n            const isCurrent = currentSong._id?.$oid === song._id?.$oid;\n            const nextSong = currentSong.index + 1;\n            const nextSongIndex = nextSong === playlist.length ? 0 : nextSong;\n            return (\n              <SongItem\n                className={`${isCurrent ? \"bg-black\" : \"bg-dark\"}`}\n                key={song._id?.$oid}\n                onClick={(e) => {\n                  e.preventDefault();\n                  if (!isCurrent) {\n                    setCurrentSong({ ...song, index });\n                    setPlaying(true);\n                  }\n                }}\n                song={song}\n                isCurrent={isCurrent}\n                playing={playing}\n                isNextSong={nextSongIndex === index}\n                duration={duration || 0}\n                progress={progress}\n              />\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import { asyncFunction } from \"../utils/axios\";\n\nexport const getPlaylist = () =>\n  asyncFunction({ method: \"GET\", url: \"/playlist\" });\n","import { Navbar } from \"./components/Navbar\";\nimport { Playlist } from \"./components/Playlist\";\n\nfunction App() {\n  return (\n    <>\n    <Navbar/>\n    <Playlist />\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { SocketProvider } from \"./hooks/useSocket\";\nimport config from \"./config\";\nimport \"./assets/sass/main.scss\";\nReactDOM.render(\n  <React.StrictMode>\n    <SocketProvider url={config.webSocketUrl}>\n      <App />\n    </SocketProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}