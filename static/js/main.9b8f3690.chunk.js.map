{"version":3,"sources":["hooks/useSocket.tsx","components/Switch.tsx","components/Navbar.tsx","config.ts","utils/axios.ts","components/Badge.tsx","components/Song.tsx","components/Spinner.tsx","components/VideoWrapper.tsx","components/Playlist.tsx","api/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["defaultContext","socketConnected","socketId","isSyncMode","isHost","setIsSyncMode","Error","SocketContext","createContext","SocketProvider","children","value","url","socketRef","useRef","emitterRef","EventEmitter","useState","setSocketId","setSocketConnected","setIsHost","useEffect","socket","WebSocket","current","onopen","onclose","onmessage","e","JSON","parse","data","message","event_type","emit","console","log","close","removeAllListeners","useProvideSocket","Provider","useSocket","useContext","Switch","className","id","rest","type","htmlFor","Navbar","send","href","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","undefined","onChange","checked","target","config","baseUrl","process","webSocketUrl","AxiosError","status","details","axiosError","statusCode","Object","setPrototypeOf","prototype","this","axiosInstance","axios","create","baseURL","interceptors","response","use","error","request","asyncFunction","a","Badge","title","SongItem","song","onClick","isCurrent","playing","progress","isNextSong","duration","style","cursor","width","src","thumbnail_url","alt","description","height","role","aria-valuenow","aria-valuemin","aria-valuemax","Spinner","VideoWrapper","Playlist","playlist","setPlayList","setPlaying","loading","setLoading","subscribed","setSubscribed","playerRef","syncRef","seek","_id","$oid","user","index","currentSong","setCurrentSong","appendToPlaylist","useCallback","newItem","canControl","handleSeek","video_id","video_index","currentSongId","seekNum","parseFloat","vidIndex","parseInt","playedSeconds","length","trySeek","internalPlayer","getInternalPlayer","seekTo","err","handlePlayPause","getSocket","sendPlayPauseMessage","isPlaying","sendSeekMessage","seconds","syncMusic","emitter","on","removeListener","onNewSong","json","method","fetchPlaylist","Math","round","zIndex","position","ref","onStart","onPlay","onPause","pip","onSeek","onProgress","onDuration","onEnded","nextIndex","wrapper","map","nextSong","nextSongIndex","preventDefault","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b8f3690.chunk.js","sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useContext,\n  createContext,\n  useRef,\n} from \"react\";\nimport EventEmitter from \"events\";\n\ninterface SocketContextInterface {\n  socketRef?: React.MutableRefObject<WebSocket | undefined>;\n  emitterRef?: React.MutableRefObject<EventEmitter>;\n  socketId: string;\n  socketConnected: boolean;\n  isSyncMode: boolean;\n  isHost: boolean;\n  setIsSyncMode: (value: boolean) => void;\n}\nconst defaultContext: SocketContextInterface = {\n  socketConnected: false,\n  socketId: \"\",\n  isSyncMode: false,\n  isHost: false,\n  setIsSyncMode: () => {\n    throw new Error(\"NOt implemented\");\n  },\n};\n\nconst SocketContext = createContext<SocketContextInterface>(defaultContext);\n\nconst useProvideSocket = (url: string): SocketContextInterface => {\n  const socketRef = useRef<WebSocket>();\n  const emitterRef = useRef<EventEmitter>(new EventEmitter());\n  const [socketId, setSocketId] = useState<string>(\"\");\n  const [socketConnected, setSocketConnected] = useState<boolean>(false);\n  const [isHost, setIsHost] = useState<boolean>(false);\n  const [isSyncMode, setIsSyncMode] = useState<boolean>(false);\n  useEffect(() => {\n    const socket = new WebSocket(url);\n    socketRef.current = socket;\n    if (socket) {\n      socket.onopen = function () {\n        setSocketConnected(true);\n      };\n      socket.onclose = function () {\n        setSocketId(\"\");\n        setSocketConnected(false);\n      };\n      socket.onmessage = function (e) {\n        const { message, event_type } = JSON.parse(e.data);\n        if (event_type === \"welcome\") {\n          setSocketId(message);\n        }\n        if (event_type === \"host\") {\n          setIsHost(message === \"true\");\n        }\n        emitterRef.current?.emit(event_type, message);\n        console.log(\"Received: \" + e.data);\n      };\n    }\n  }, [url]);\n\n  console.log({ isHost });\n  useEffect(\n    () => () => {\n      if (socketRef.current) {\n        socketRef.current.close();\n      }\n      if (emitterRef.current) {\n        emitterRef.current.removeAllListeners();\n      }\n    },\n    []\n  );\n  return {\n    socketRef,\n    emitterRef,\n    socketConnected,\n    socketId,\n    isHost,\n    isSyncMode,\n    setIsSyncMode,\n  };\n};\n\ninterface SocketProviderProps {\n  children: React.ReactNode;\n  url?: string;\n}\nexport const SocketProvider = ({ children, url }: SocketProviderProps) => {\n  const value = useProvideSocket(url || \"\");\n  return (\n    <SocketContext.Provider value={value}>{children}</SocketContext.Provider>\n  );\n};\n\nexport const useSocket = () => {\n  return useContext(SocketContext);\n};\n","export const Switch = ({ className = '', children, id, ...rest }: Omit<React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>, 'type'>) => {\n    return (\n        <div className=\"form-check form-switch\">\n            <input type=\"checkbox\" className={`form-check-input ${className}`} {...rest} id={id} />\n            <label className=\"form-check-label text-light\" htmlFor={id}>{children}</label>\n        </div>\n    )\n}","import { useEffect } from \"react\";\nimport { useSocket } from \"../hooks/useSocket\";\nimport { Switch } from \"./Switch\";\n\nexport const Navbar = () => {\n  const {\n    socketConnected,\n    socketId,\n    socketRef,\n    isSyncMode,\n    setIsSyncMode,\n    isHost,\n  } = useSocket();\n  const syncMode = ({\n    target: { checked },\n  }: React.ChangeEvent<HTMLInputElement>) => {\n    setIsSyncMode(checked);\n  };\n\n  useEffect(() => {\n    const socket = socketRef?.current;\n    if (socketConnected && socketId && socket) {\n      if (isSyncMode) {\n        socket.send(\"/join sync\");\n      } else {\n        socket.send(\"/leave sync\");\n      }\n    }\n  }, [isSyncMode, socketRef, socketConnected, socketId]);\n  return (\n    <nav className=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark\">\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"/\">\n          Innovate Playlist\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarText\"\n          aria-controls=\"navbarText\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n          <ul className=\"navbar-nav ms-auto\">\n            <li className=\"nav-item\">\n              {isSyncMode ? (\n                isHost ? (\n                  <span\n                    className=\"nav-link badge bg-success text-dark\"\n                    aria-current=\"page\"\n                  >\n                    Host\n                  </span>\n                ) : (\n                  <span\n                    className=\"nav-link badge bg-light text-dark\"\n                    aria-current=\"page\"\n                  >\n                    Guest\n                  </span>\n                )\n              ) : undefined}\n            </li>\n          </ul>\n          <form className=\"d-flex ms-auto\">\n            <Switch onChange={syncMode} checked={isSyncMode}>\n              Sangai Sunam (Beta)\n            </Switch>\n          </form>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","const config = {\n  baseUrl: process.env.REACT_APP_BACKEND_URL,\n  webSocketUrl: process.env.REACT_APP_WS_URL,\n};\n\nexport default config;\n","import config from \"../config\";\nimport axios, { AxiosRequestConfig } from \"axios\";\n\nexport class AxiosError extends Error {\n  private statusCode: number | string;\n\n  private details: {\n    [id: string]: any;\n  };\n\n  private axiosError: any;\n\n  constructor(\n    status: number | string,\n    message: string,\n    details: any,\n    axiosError: any\n  ) {\n    super(message);\n    this.statusCode = status;\n    this.details = details;\n    this.axiosError = axiosError;\n    // only because we are extending a built in class\n    Object.setPrototypeOf(this, AxiosError.prototype);\n  }\n\n  serializeErrors() {\n    return [\n      {\n        message: this.message,\n        status: this.statusCode,\n        details: this.details,\n      },\n    ];\n  }\n}\n\nexport const axiosInstance = axios.create({\n  baseURL: config.baseUrl,\n});\n\naxiosInstance.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      const axiosError = new AxiosError(\n        error.response.status,\n        error.response.data.message,\n        error.response.data,\n        error.response\n      );\n      throw axiosError;\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      const axiosError = new AxiosError(500, \"No Response\", {}, error.request);\n      throw axiosError;\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      const axiosError = new AxiosError(\n        500,\n        error.message,\n        { message: \"Setting error\" },\n        {}\n      );\n      throw axiosError;\n    }\n  }\n);\n\nexport const asyncFunction = async (config: AxiosRequestConfig) => {\n  const response = await axiosInstance.request(config);\n  return response.data;\n};\n","export interface BadgeProps {\n  title: string;\n  className?: string;\n}\nexport const Badge = ({ title, className = \"\" }: BadgeProps) => {\n  return <span className={`badge mt-1 me-2 ${className}`}>{title}</span>;\n};\n","import { Badge } from \"./Badge\";\n\nexport interface Song {\n  user: string;\n  _id: {\n    $oid: string;\n  };\n  thumbnail_url: string;\n  url: string;\n  title: string;\n  description: string;\n  status: \"pending\" | \"playing\" | \"played\";\n}\n\ninterface SongProps {\n  song: Song;\n  onClick: React.MouseEventHandler<HTMLLIElement>;\n  isCurrent: boolean;\n  playing: boolean;\n  progress: number;\n  isNextSong: boolean;\n  duration: number;\n  className?: string;\n}\nexport const SongItem = ({\n  song,\n  onClick,\n  isCurrent,\n  playing,\n  progress,\n  isNextSong,\n  duration,\n  className,\n}: SongProps) => (\n  <li\n    onClick={onClick}\n    className={`list-group-item p-0 text-white px-5 py-2 mb-2 ${\n      className || \"\"\n    }`}\n    style={{\n      cursor: \"pointer\",\n    }}\n  >\n    <div className=\" d-flex\">\n      <div className=\"flex-shrink-0 d-flex\" style={{ width: \"20%\" }}>\n        <div className=\"align-self-center\">\n          <img\n            src={song.thumbnail_url}\n            className=\"img-fluid\"\n            alt={song.title}\n          />\n        </div>\n      </div>\n      <div className=\"flex-grow-1 py-2 px-3\">\n        <p className=\"mb-1\">{song.title || song.url}</p>\n        <p className=\"text-muted\">{song.description}</p>\n        <div className=\"d-flex\">\n          {isCurrent && playing && (\n            <>\n              <Badge className=\"align-self-center bg-success\" title=\"Playing\" />\n              <Badge\n                className=\"align-self-center bg-light text-dark\"\n                title={`${progress} %`}\n              />\n            </>\n          )}\n          {isCurrent && !playing && (\n            <Badge className=\"align-self-center bg-danger\" title=\"Paused\" />\n          )}\n          {isNextSong && (\n            <>\n              <Badge\n                className=\"align-self-center bg-warning text-dark\"\n                title=\"Up Next\"\n              />\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n    {isCurrent && (\n      <div className=\"progress bg-dark mt-2\" style={{ height: \"4px\" }}>\n        <div\n          className=\"progress-bar bg-danger\"\n          role=\"progressbar\"\n          style={{ width: `${progress}%` }}\n          aria-valuenow={progress}\n          aria-valuemin={0}\n          aria-valuemax={duration}\n        />\n      </div>\n    )}\n  </li>\n);\n","export const Spinner = () => {\n    return (\n        <div className=\"spinner-border text-light\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}","import React from \"react\";\n\nexport const VideoWrapper = ({children}:{children?:React.ReactNode}) => (\n    <div className=\"video-player\">\n    {children}\n</div>)","import React, { useState } from \"react\";\nimport { useRef } from \"react\";\nimport { useCallback } from \"react\";\nimport { useEffect } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { getPlaylist } from \"../api\";\nimport { useSocket } from \"../hooks/useSocket\";\nimport { Song, SongItem } from \"./Song\";\nimport { Spinner } from \"./Spinner\";\nimport { VideoWrapper } from \"./VideoWrapper\";\n\nexport const Playlist = () => {\n  const {\n    socketConnected,\n    socketId,\n    socketRef,\n    emitterRef,\n    isSyncMode,\n    isHost,\n  } = useSocket();\n  const [playlist, setPlayList] = useState<Song[]>([]);\n  const [playing, setPlaying] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [subscribed, setSubscribed] = useState<boolean>(false);\n  const playerRef = useRef<ReactPlayer>(null);\n  const syncRef = useRef<{ seek: number }>({\n    seek: 0,\n  });\n  const [currentSong, setCurrentSong] = useState<\n    Song & { index: number; duration?: number; playedSeconds?: number }\n  >({\n    _id: {\n      $oid: \"\",\n    },\n    user: \"\",\n    url: \"\",\n    thumbnail_url: \"\",\n    status: \"pending\",\n    title: \"\",\n    description: \"\",\n    index: 0,\n  });\n  const appendToPlaylist = useCallback(\n    (newItem: Song) => {\n      setPlayList([...playlist, newItem]);\n    },\n    [playlist]\n  );\n  const canControl = isSyncMode ? (isHost ? true : false) : true;\n  const handleSeek = useCallback(\n    (data: string) => {\n      const {\n        video_id,\n        seek,\n        video_index,\n      }: { video_id: string; seek: string; video_index: string } =\n        JSON.parse(data);\n      const currentSongId = currentSong._id.$oid;\n      const seekNum = parseFloat(seek);\n      const vidIndex = parseInt(video_index, 10);\n      if (currentSongId === video_id) {\n        setCurrentSong({ ...currentSong, playedSeconds: seekNum });\n      }\n      if (currentSongId !== video_id && playlist.length > vidIndex) {\n        // todo handle for video not found\n        const song = playlist[vidIndex];\n        setCurrentSong({ ...song, playedSeconds: seekNum, index: vidIndex });\n      }\n    },\n    [currentSong, playlist]\n  );\n  const trySeek = (seekNum: number) => {\n    try {\n      const internalPlayer = playerRef?.current?.getInternalPlayer();\n      if (internalPlayer) {\n        internalPlayer.seekTo(seekNum);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const handlePlayPause = useCallback(\n    (data: string) => {\n      const {\n        video_id,\n        video_index,\n        seek,\n        playing,\n      }: {\n        video_id: string;\n        seek: string;\n        playing: string;\n        video_index: string;\n      } = JSON.parse(data);\n      const currentSongId = currentSong._id.$oid;\n      const seekNum = parseFloat(seek);\n      const vidIndex = parseInt(video_index, 10);\n      if (currentSongId === video_id) {\n        setCurrentSong({ ...currentSong });\n      }\n      if (currentSongId !== video_id && playlist.length > vidIndex) {\n        // todo handle for video not found\n        const song = playlist[vidIndex];\n        setCurrentSong({ ...song, index: vidIndex });\n      }\n      syncRef.current.seek = seekNum;\n      trySeek(seekNum);\n      setPlaying(playing === \"true\");\n    },\n    [currentSong, playlist]\n  );\n  const getSocket = useCallback(() => socketRef?.current, [socketRef]);\n\n  const sendPlayPauseMessage = useCallback(\n    (isPlaying: boolean) => {\n      if (isHost && isSyncMode) {\n        getSocket()?.send(\n          `/pp ${currentSong._id.$oid} ${\n            currentSong.playedSeconds || 0\n          } ${isPlaying} ${currentSong.index || 0}`\n        );\n      }\n    },\n    [currentSong, isSyncMode, isHost, getSocket]\n  );\n\n  const sendSeekMessage = useCallback(\n    (seconds: number) => {\n      if (isHost && isSyncMode) {\n        getSocket()?.send(\n          `/seek ${currentSong._id.$oid} ${seconds || 0} ${\n            currentSong.index || 0\n          }`\n        );\n      }\n    },\n    [isHost, isSyncMode, currentSong, getSocket]\n  );\n  const syncMusic = useCallback(() => {\n    sendPlayPauseMessage(playing);\n  }, [sendPlayPauseMessage, playing]);\n\n  useEffect(() => {\n    const socket = socketRef?.current;\n    const emitter = emitterRef?.current;\n    if (\n      emitter &&\n      socketId &&\n      socketConnected &&\n      socket &&\n      isHost &&\n      isSyncMode\n    ) {\n      emitter.on(\"syncRoomJoined\", syncMusic);\n    }\n    return () => {\n      emitter?.removeListener(\"syncRoomJoined\", syncMusic);\n    };\n  }, [\n    socketRef,\n    emitterRef,\n    socketConnected,\n    socketId,\n    syncMusic,\n    playing,\n    isHost,\n    isSyncMode,\n  ]);\n  useEffect(() => {\n    const socket = socketRef?.current;\n    const emitter = emitterRef?.current;\n    if (!subscribed) {\n      if (isSyncMode) {\n        if (socket && socketConnected && socketId && emitter) {\n          setSubscribed(true);\n          console.log(\"added sync mode listeners\");\n          emitter.on(\"playPause\", handlePlayPause);\n          emitter.on(\"seek\", handleSeek);\n        }\n      }\n    }\n  }, [\n    isSyncMode,\n    socketRef,\n    emitterRef,\n    socketId,\n    socketConnected,\n    playlist,\n    subscribed,\n    handlePlayPause,\n    handleSeek,\n  ]);\n\n  useEffect(() => {\n    const emitter = emitterRef?.current;\n    return () => {\n      console.log(\"removed sync mode listeners\");\n      emitter?.removeListener(\"playPause\", handlePlayPause);\n      emitter?.removeListener(\"seek\", handleSeek);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    const socket = socketRef?.current;\n    const emitter = emitterRef?.current;\n    const onNewSong = (data: string) => {\n      const json: Song = JSON.parse(data);\n      appendToPlaylist(json);\n    };\n    if (socketConnected && socket && socketId && emitter) {\n      console.log(\"all done\");\n      emitter.on(\"newSong\", onNewSong);\n    }\n    return () => {\n      console.log(\"Clear\");\n      emitter?.removeListener(\"newSong\", onNewSong);\n    };\n  }, [socketId, socketConnected, socketRef, emitterRef, appendToPlaylist]);\n\n  useEffect(() => {\n    const fetchPlaylist = async () => {\n      try {\n        setLoading(true);\n        const playlist = await getPlaylist();\n        setPlayList(playlist);\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPlaylist();\n  }, []);\n\n  useEffect(() => {\n    if (playlist.length && !playing && !currentSong.url) {\n      setCurrentSong({ ...currentSong, ...playlist[0], index: 0 });\n    }\n  }, [playlist, playing, currentSong]);\n\n  const { playedSeconds, duration } = currentSong;\n  const progress =\n    playedSeconds && duration\n      ? Math.round((playedSeconds / duration) * 100)\n      : 0;\n\n  if (loading) {\n    return (\n      <div className=\"max-height bg-dark d-flex align-items-center justify-content-center w-full\">\n        <Spinner />\n      </div>\n    );\n  }\n  return (\n    <div className=\"overflow-hidden d-flex bg-dark\">\n      <div className=\"flex-grow-1 col max-height\">\n        {!canControl && (\n          <div\n            style={{\n              width: \"100%\",\n              height: \"100%\",\n              zIndex: 1,\n              position: \"absolute\",\n            }}\n          />\n        )}\n        <ReactPlayer\n          ref={playerRef}\n          url={currentSong.url}\n          playing={playing}\n          onStart={() => {\n            if (syncRef.current.seek) {\n              trySeek(syncRef.current.seek);\n            }\n            sendPlayPauseMessage(true);\n            setPlaying(true);\n          }}\n          onPlay={() => {\n            sendPlayPauseMessage(true);\n            setPlaying(true);\n          }}\n          onPause={() => {\n            sendPlayPauseMessage(false);\n            setPlaying(false);\n          }}\n          pip\n          onSeek={(seconds) => {\n            if (canControl) {\n              sendSeekMessage(seconds);\n            }\n          }}\n          onProgress={({ playedSeconds }) => {\n            setCurrentSong({\n              ...currentSong,\n              playedSeconds: playedSeconds,\n            });\n          }}\n          onDuration={(duration) => {\n            console.log({ duration });\n            setCurrentSong({\n              ...currentSong,\n              duration,\n            });\n          }}\n          onEnded={() => {\n            syncRef.current.seek = 0;\n            if (playlist.length) {\n              const nextIndex = currentSong.index + 1;\n              if (nextIndex === playlist.length) {\n                setCurrentSong({ ...playlist[0], index: 0 });\n              } else {\n                setCurrentSong({ ...playlist[nextIndex], index: nextIndex });\n              }\n            }\n          }}\n          width={\"100%\"}\n          wrapper={VideoWrapper}\n        />\n      </div>\n      <div className=\"flex-shrink-0 col-sm-4 overflow-auto max-height\">\n        <ul className=\"list-group list-group-flush\">\n          {playlist.map((song, index) => {\n            const isCurrent = currentSong._id?.$oid === song._id?.$oid;\n            const nextSong = currentSong.index + 1;\n            const nextSongIndex = nextSong === playlist.length ? 0 : nextSong;\n            return (\n              <SongItem\n                className={`${isCurrent ? \"bg-black\" : \"bg-dark\"}`}\n                key={song._id?.$oid}\n                onClick={(e) => {\n                  e.preventDefault();\n                  if (!isCurrent && canControl) {\n                    setCurrentSong({ ...song, index });\n                    setPlaying(true);\n                  }\n                }}\n                song={song}\n                isCurrent={isCurrent}\n                playing={playing}\n                isNextSong={nextSongIndex === index}\n                duration={duration || 0}\n                progress={progress}\n              />\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import { asyncFunction } from \"../utils/axios\";\n\nexport const getPlaylist = () =>\n  asyncFunction({ method: \"GET\", url: \"/playlist\" });\n","import { Navbar } from \"./components/Navbar\";\nimport { Playlist } from \"./components/Playlist\";\n\nfunction App() {\n  return (\n    <>\n    <Navbar/>\n    <Playlist />\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { SocketProvider } from \"./hooks/useSocket\";\nimport config from \"./config\";\nimport \"./assets/sass/main.scss\";\nReactDOM.render(\n  <React.StrictMode>\n    <SocketProvider url={config.webSocketUrl}>\n      <App />\n    </SocketProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}